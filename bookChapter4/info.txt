Функции за обработка на масиви:

Масивът представлява подредена съвкупност от данни. Като всеки елемент от масива си има свой индекс.
С цикъл може да се обходи целият масив.

При ръчното създаване на масив, можем да зададем какъвто си искаме индекс 

$os[10] = 'linux';
$os[3] = 'windows';
$os[20] = 'mac';
$os[35] = 'bsd';


Списъци:

Разликата от масива е в логическата организация. Списък се нарича онзи масив, индексите на който започват от 0 
и следват без прекъсване. Нпаример масив, в който на елементите са присвоени индексите 0 1 2 3 4 се явява списък. 
А масив, ба който са присвоени индексите 0 1 3 4 5 се явява обикновен масив.


Асоциативни масиви:

Индекса на масива може да е текст и число. Асоциативният масив е масив, чийто индекс се явява низ. 
За да обходим всички елементи на масива имаме foreach


Лист:

Инструкцията list() присвоява на предните и променливи стойностите на елементите на масив. 


Многомерен масив:

Този метод е по универсален, защото позволява създаването на празни масиви, асоциативни масиви а и многомерсни масиви.

Празни масиви - $n = array();


Операции с масиви:

Изтриване на масив (unset)
Сливане на масиви - конкатенация с + и array_merge(), вторият е по-безопасен!
Обхождане на масив - може да бъде обходем много лесно с цикъл фор.
Функцията count() връща броя на елементите в масива. Тъй като индексите в списъка са числови и следват един след друг,
то цикъла фор е най-простият и удободен начин за обхождане!

За масиви, (където функциите са също числови, но могат да не следват поред) и асоциативните масиви може да се използва следната конструкция:

for(reset($масив); ($k = key($масив)); next($масив)
echo $k = $масив[$k];
Функцията ресет  нулира масива в самото начало
некст връща следващият елемтн от масива
кей - връща ключа от масива

Може да се изпълни и по следният начин:
for(енд($масив); ($k = key($масив)); преж($масив)
echo $k = $масив[$k];

Функцията енд пренавива масива в самият край
прев - връща предходния елемент на масива.

За асоциативните масиви:
foreach($masiv as $key => value)
echo $key = $value;

Сортиране на масив:
asort & arsort - сортиране на социативен масив по стойност арсорт - обратен ред
ksort & krsort - сортиране на социативен масив по ключ крсорт - обратен ред
sort & rsort - сортиране на обикновен масив рсорт - обратен ред
shuffle - разбъркване. Не се използва за асоциативни масиви, тъй като ще изгубим данни (ключа). Използва се само за масиви с числови индекси

array_push($arr, 55,1,2,3,4,5....) добавя указана стойност в масива

array_pop($arr) - Тя връща стойността на последният елемент и го изтрива.

array_unshift($arr, 1,2) - добавя елемнти в началото на списъка
array_shift($arr) - Връща стойността на 1 елемент и го премахва


 